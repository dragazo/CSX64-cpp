#!/usr/bin/env bash

# theoretically should work, but the last link step is giving a bunch of redefinition errors
# it's honestly just much less of a headache to do the inefficient way and just throw all the raw .cpp files at g++

# this script generates a makefile for all the cpp files in directories at and below the current directory.
# dependencies are automatically parsed and applied to each cpp file.

# the name of the makefile to build
makefile_name="makefile"

# the name of the exe to create
exe="csx"

# the command to use for linking one or more .o files into the final
link="g++ -o $exe -lstdc++"

# the command to use for compiling a single .cpp file to a .o file
compile="g++ -std=c++17 -c"

# ------------- #
# -- utility -- #
# ------------- #

# gets the object file name for a given cpp file name
OFile()
{
    echo $(basename -s .cpp $1)".o"
}

# ---------------------------- #
# -- generate main assembly -- #
# ---------------------------- #

echo -e "# -- generated by makemake.sh -- #\n" >$makefile_name

# start dependencies string
dep=

# for each cpp file anywhere below us
for i in $(find -name "*.cpp")
do
    # add its object file form to the dependencies string
    dep=$dep$(OFile $i)" "
done

echo -e "$exe: $dep\n\t$link $dep\n" >>$makefile_name

# ----------------------------- #
# -- generate sub-assemblies -- #
# ----------------------------- #

# for each cpp file anywhere below us
for i in $(ls *.cpp | sort)
do
    # show file name
    echo $i
    
    # start dependencies string
    dep=
    
    # for each include file it has (only non-library headers)
    for j in $(grep -e "#include \".*\"" $i)
    do
        if [[ $j =~ .*\"(.*)\" ]]
        then
            # log that we accounted for this reference
            echo "+${BASH_REMATCH[1]}"
            
            dep=$dep${BASH_REMATCH[1]}" "
        fi
    done
    echo

    echo -e "$(OFile $i): $dep\n\t$compile $i\n" >>$makefile_name
done

# ------------------------------ #
# -- generate extra utilities -- #
# ------------------------------ #

echo -e "clean:\n\trm *.o\n" >>$makefile_name

# --------------------- #
# -- success message -- #
# --------------------- #

echo makefile generated successfully: no errors
echo
cat makefile

